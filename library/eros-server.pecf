pyxis-doc:
	version = 1.0; encoding = "ISO-8859-1"

system:
	xmlns = "http://www.eiffel.com/developers/xml/configuration-1-8-0"
	xmlns.xsi = "http://www.w3.org/2001/XMLSchema-instance" 
	xsi.schemaLocation = "http://www.eiffel.com/developers/xml/configuration-1-8-0 http://www.eiffel.com/developers/xml/configuration-1-8-0.xsd" 
	name = el_eros_server
	uuid = "229b7574-09aa-11df-87bf-1b0f428786d3" 
	library_target = el_eros_server
	
	target:
		name = el_eros_server
		
		description: 
			"""
				Eiffel Remote Object Framework for creating client-server apps. (http://www.eiffel-loop.com/eros.html)
			"""

		root:
			all_classes = true

		option:
			trace = false; debug=false; warning=true; syntax = standard
			assertions:
				precondition = true; postcondition = true; check = true; invariant = true

		library: 
			name = base; location = "$ISE_LIBRARY/library/base/base.ecf"

		library: 
			name = net; location = "$ISE_LIBRARY/library/net/net.ecf"

		# Eiffel Loop overrides
		library:
			name = vision2; location = "ES-vision2.ecf"
			readonly = false

		# Eiffel Loop libraries

		library:
			name = el_base; location = "base.ecf"

		library:
			name = el_app_manage; location = "app-manage.ecf"
			readonly = false

		library:
			name = el_net_base; location = "network.ecf"

		library:
			name = el_vision2; location = "vision2-x.ecf"

		library:
			name = el_xdoc_scanning; location = "xdoc-scanning.ecf"

		#library:
		#	name = el_eiffel2java; location="eiffel-loop-eiffel2java.ecf"

		cluster:
			name = el_net_eros; location = "network/eros"; recursive = true
			option:
				namespace = "Eiffel-Loop.EROS"

