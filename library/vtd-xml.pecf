pyxis-doc:
	version = 1.0; encoding = "ISO-8859-1"

system:
	xmlns = "http://www.eiffel.com/developers/xml/configuration-1-8-0"
	xmlns.xsi = "http://www.w3.org/2001/XMLSchema-instance" 
	xsi.schemaLocation = "http://www.eiffel.com/developers/xml/configuration-1-8-0 http://www.eiffel.com/developers/xml/configuration-1-8-0.xsd" 
	name = el_vtd_xml
	uuid = "229b77d6-09aa-11df-87c5-b77da3e246d9" 
	library_target = el_vtd_xml
	
	target:
		name = el_vtd_xml
		
		description: 
			"""
				Eiffel interface VTD-XML xpath and XML parsing library. (http://www.eiffel-loop.com)
			"""

		root:
			all_classes = true

		option:
			namespace = "Eiffel-Loop.Library.VTD-XML"; trace = false; debug = false; warning = true; syntax = standard
			assertions:
				precondition = true; postcondition = true; check = true; invariant = true

		external_include: 
			location = "$(EIFFEL_LOOP_C)/include"
			description: 
				"""
					C implementation of EL_C_CALLABLE_PROCEDURE
				"""

		external_include: 
			location = "$(EIFFEL_LOOP_C)/vtd2eiffel/source"

		external_object:
			location = "-L$(EIFFEL_LOOP_C)/vtd2eiffel/spec/$(ISE_PLATFORM) -lvtd-xml"
			condition:
				platform:
					value = unix

		external_object:
			location = "$(EIFFEL_LOOP_C)/vtd2eiffel/spec/$(ISE_PLATFORM)/vtd-xml.lib"
			condition:
				platform:
					value = windows

		library: 
			name = base; location = "$ISE_LIBRARY/library/base/base.ecf"

		library:
			name = el_base; location = "base.ecf"

		cluster:
			name = vtd_xml; location = "persistency/xml/vtd-xml"; recursive = true
			option:
				namespace = Eiffel_Loop_VTD_XML
			file_rule:
				exclude:
					"/windows$"
				condition:
					platform:
						value = unix

			file_rule:
				exclude:
					"/unix$"
				condition:
					platform:
						value = windows

		cluster:
			name = open_office_spread_sheet; location = "persistency/xml/open-office-spreadsheet"; recursive = true
			option:
				namespace = Eiffel_Loop_VTD_XML

